'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace dorme
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private PostSerializedProductionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostRootstownProductionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostScrapOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostVirtualReceiptOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepostByKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SelectByKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SelectByClientOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://usmsbrk-ap19.northamerica.delphiauto.net/DPH/Integration/Sap/ProductionCou"& _ 
                "nt/Service.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event PostSerializedProductionCompleted As PostSerializedProductionCompletedEventHandler
        
        '''<remarks/>
        Public Event PostRootstownProductionCompleted As PostRootstownProductionCompletedEventHandler
        
        '''<remarks/>
        Public Event PostScrapCompleted As PostScrapCompletedEventHandler
        
        '''<remarks/>
        Public Event PostVirtualReceiptCompleted As PostVirtualReceiptCompletedEventHandler
        
        '''<remarks/>
        Public Event RepostByKeyCompleted As RepostByKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event SelectByKeyCompleted As SelectByKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event SelectByClientCompleted As SelectByClientCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostSerializedProduction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostSerializedProduction( _
                    ByVal strClientName As String,  _
                    ByVal strPlantId As String,  _
                    ByVal strMaterialNumber As String,  _
                    ByVal strProductVersion As String,  _
                    ByVal dblQuantity As Double,  _
                    ByVal datManufacturingDateTime As Date,  _
                    ByVal strOperatorId As String,  _
                    ByVal datRequestDateTime As Date,  _
                    ByVal strSerialNumber As String,  _
                    ByVal strStorageLocation As String,  _
                    ByVal strShipToNumber As String,  _
                    ByVal strContainerNumber As String,  _
                    ByVal strLotNumber As String,  _
                    ByVal strDestinationLocation As String,  _
                    ByVal strCustomerName As String,  _
                    ByVal strCustomerPlant As String,  _
                    ByVal strAddressStreet As String,  _
                    ByVal strAddressCity As String,  _
                    ByVal strAddressState As String,  _
                    ByVal strAddressPostalCode As String,  _
                    ByVal strAddressCountry As String,  _
                    ByVal strCustomerPartNumber As String,  _
                    ByVal strPartDescription As String,  _
                    ByVal dblGrossweight As Double,  _
                    ByVal strEngineeringChange As String,  _
                    ByVal strContactPerson As String,  _
                    ByVal strOptionalText1 As String,  _
                    ByVal strOptionalText2 As String,  _
                    ByVal strOptionalText3 As String,  _
                    ByVal strOptionalText4 As String,  _
                    ByVal strOptionalText5 As String,  _
                    ByVal strDestination As String,  _
                    ByVal strDunnscode As String,  _
                    ByVal strLabelFile As String,  _
                    ByVal iCopies As Integer,  _
                    ByVal strLabelType As String,  _
                    ByVal iNumberOfBoxes As Integer,  _
                    ByVal strCountryOfOrigin As String,  _
                    ByVal iTimeout As Integer,  _
                    ByVal fBufferOnSystemException As Boolean) As String
            Dim results() As Object = Me.Invoke("PostSerializedProduction", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, strSerialNumber, strStorageLocation, strShipToNumber, strContainerNumber, strLotNumber, strDestinationLocation, strCustomerName, strCustomerPlant, strAddressStreet, strAddressCity, strAddressState, strAddressPostalCode, strAddressCountry, strCustomerPartNumber, strPartDescription, dblGrossweight, strEngineeringChange, strContactPerson, strOptionalText1, strOptionalText2, strOptionalText3, strOptionalText4, strOptionalText5, strDestination, strDunnscode, strLabelFile, iCopies, strLabelType, iNumberOfBoxes, strCountryOfOrigin, iTimeout, fBufferOnSystemException})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginPostSerializedProduction( _
                    ByVal strClientName As String,  _
                    ByVal strPlantId As String,  _
                    ByVal strMaterialNumber As String,  _
                    ByVal strProductVersion As String,  _
                    ByVal dblQuantity As Double,  _
                    ByVal datManufacturingDateTime As Date,  _
                    ByVal strOperatorId As String,  _
                    ByVal datRequestDateTime As Date,  _
                    ByVal strSerialNumber As String,  _
                    ByVal strStorageLocation As String,  _
                    ByVal strShipToNumber As String,  _
                    ByVal strContainerNumber As String,  _
                    ByVal strLotNumber As String,  _
                    ByVal strDestinationLocation As String,  _
                    ByVal strCustomerName As String,  _
                    ByVal strCustomerPlant As String,  _
                    ByVal strAddressStreet As String,  _
                    ByVal strAddressCity As String,  _
                    ByVal strAddressState As String,  _
                    ByVal strAddressPostalCode As String,  _
                    ByVal strAddressCountry As String,  _
                    ByVal strCustomerPartNumber As String,  _
                    ByVal strPartDescription As String,  _
                    ByVal dblGrossweight As Double,  _
                    ByVal strEngineeringChange As String,  _
                    ByVal strContactPerson As String,  _
                    ByVal strOptionalText1 As String,  _
                    ByVal strOptionalText2 As String,  _
                    ByVal strOptionalText3 As String,  _
                    ByVal strOptionalText4 As String,  _
                    ByVal strOptionalText5 As String,  _
                    ByVal strDestination As String,  _
                    ByVal strDunnscode As String,  _
                    ByVal strLabelFile As String,  _
                    ByVal iCopies As Integer,  _
                    ByVal strLabelType As String,  _
                    ByVal iNumberOfBoxes As Integer,  _
                    ByVal strCountryOfOrigin As String,  _
                    ByVal iTimeout As Integer,  _
                    ByVal fBufferOnSystemException As Boolean,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PostSerializedProduction", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, strSerialNumber, strStorageLocation, strShipToNumber, strContainerNumber, strLotNumber, strDestinationLocation, strCustomerName, strCustomerPlant, strAddressStreet, strAddressCity, strAddressState, strAddressPostalCode, strAddressCountry, strCustomerPartNumber, strPartDescription, dblGrossweight, strEngineeringChange, strContactPerson, strOptionalText1, strOptionalText2, strOptionalText3, strOptionalText4, strOptionalText5, strDestination, strDunnscode, strLabelFile, iCopies, strLabelType, iNumberOfBoxes, strCountryOfOrigin, iTimeout, fBufferOnSystemException}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPostSerializedProduction(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostSerializedProductionAsync( _
                    ByVal strClientName As String,  _
                    ByVal strPlantId As String,  _
                    ByVal strMaterialNumber As String,  _
                    ByVal strProductVersion As String,  _
                    ByVal dblQuantity As Double,  _
                    ByVal datManufacturingDateTime As Date,  _
                    ByVal strOperatorId As String,  _
                    ByVal datRequestDateTime As Date,  _
                    ByVal strSerialNumber As String,  _
                    ByVal strStorageLocation As String,  _
                    ByVal strShipToNumber As String,  _
                    ByVal strContainerNumber As String,  _
                    ByVal strLotNumber As String,  _
                    ByVal strDestinationLocation As String,  _
                    ByVal strCustomerName As String,  _
                    ByVal strCustomerPlant As String,  _
                    ByVal strAddressStreet As String,  _
                    ByVal strAddressCity As String,  _
                    ByVal strAddressState As String,  _
                    ByVal strAddressPostalCode As String,  _
                    ByVal strAddressCountry As String,  _
                    ByVal strCustomerPartNumber As String,  _
                    ByVal strPartDescription As String,  _
                    ByVal dblGrossweight As Double,  _
                    ByVal strEngineeringChange As String,  _
                    ByVal strContactPerson As String,  _
                    ByVal strOptionalText1 As String,  _
                    ByVal strOptionalText2 As String,  _
                    ByVal strOptionalText3 As String,  _
                    ByVal strOptionalText4 As String,  _
                    ByVal strOptionalText5 As String,  _
                    ByVal strDestination As String,  _
                    ByVal strDunnscode As String,  _
                    ByVal strLabelFile As String,  _
                    ByVal iCopies As Integer,  _
                    ByVal strLabelType As String,  _
                    ByVal iNumberOfBoxes As Integer,  _
                    ByVal strCountryOfOrigin As String,  _
                    ByVal iTimeout As Integer,  _
                    ByVal fBufferOnSystemException As Boolean)
            Me.PostSerializedProductionAsync(strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, strSerialNumber, strStorageLocation, strShipToNumber, strContainerNumber, strLotNumber, strDestinationLocation, strCustomerName, strCustomerPlant, strAddressStreet, strAddressCity, strAddressState, strAddressPostalCode, strAddressCountry, strCustomerPartNumber, strPartDescription, dblGrossweight, strEngineeringChange, strContactPerson, strOptionalText1, strOptionalText2, strOptionalText3, strOptionalText4, strOptionalText5, strDestination, strDunnscode, strLabelFile, iCopies, strLabelType, iNumberOfBoxes, strCountryOfOrigin, iTimeout, fBufferOnSystemException, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostSerializedProductionAsync( _
                    ByVal strClientName As String,  _
                    ByVal strPlantId As String,  _
                    ByVal strMaterialNumber As String,  _
                    ByVal strProductVersion As String,  _
                    ByVal dblQuantity As Double,  _
                    ByVal datManufacturingDateTime As Date,  _
                    ByVal strOperatorId As String,  _
                    ByVal datRequestDateTime As Date,  _
                    ByVal strSerialNumber As String,  _
                    ByVal strStorageLocation As String,  _
                    ByVal strShipToNumber As String,  _
                    ByVal strContainerNumber As String,  _
                    ByVal strLotNumber As String,  _
                    ByVal strDestinationLocation As String,  _
                    ByVal strCustomerName As String,  _
                    ByVal strCustomerPlant As String,  _
                    ByVal strAddressStreet As String,  _
                    ByVal strAddressCity As String,  _
                    ByVal strAddressState As String,  _
                    ByVal strAddressPostalCode As String,  _
                    ByVal strAddressCountry As String,  _
                    ByVal strCustomerPartNumber As String,  _
                    ByVal strPartDescription As String,  _
                    ByVal dblGrossweight As Double,  _
                    ByVal strEngineeringChange As String,  _
                    ByVal strContactPerson As String,  _
                    ByVal strOptionalText1 As String,  _
                    ByVal strOptionalText2 As String,  _
                    ByVal strOptionalText3 As String,  _
                    ByVal strOptionalText4 As String,  _
                    ByVal strOptionalText5 As String,  _
                    ByVal strDestination As String,  _
                    ByVal strDunnscode As String,  _
                    ByVal strLabelFile As String,  _
                    ByVal iCopies As Integer,  _
                    ByVal strLabelType As String,  _
                    ByVal iNumberOfBoxes As Integer,  _
                    ByVal strCountryOfOrigin As String,  _
                    ByVal iTimeout As Integer,  _
                    ByVal fBufferOnSystemException As Boolean,  _
                    ByVal userState As Object)
            If (Me.PostSerializedProductionOperationCompleted Is Nothing) Then
                Me.PostSerializedProductionOperationCompleted = AddressOf Me.OnPostSerializedProductionOperationCompleted
            End If
            Me.InvokeAsync("PostSerializedProduction", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, strSerialNumber, strStorageLocation, strShipToNumber, strContainerNumber, strLotNumber, strDestinationLocation, strCustomerName, strCustomerPlant, strAddressStreet, strAddressCity, strAddressState, strAddressPostalCode, strAddressCountry, strCustomerPartNumber, strPartDescription, dblGrossweight, strEngineeringChange, strContactPerson, strOptionalText1, strOptionalText2, strOptionalText3, strOptionalText4, strOptionalText5, strDestination, strDunnscode, strLabelFile, iCopies, strLabelType, iNumberOfBoxes, strCountryOfOrigin, iTimeout, fBufferOnSystemException}, Me.PostSerializedProductionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostSerializedProductionOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostSerializedProductionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostSerializedProductionCompleted(Me, New PostSerializedProductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostRootstownProduction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostRootstownProduction(ByVal strClientName As String, ByVal strPlantId As String, ByVal strMaterialNumber As String, ByVal strProductVersion As String, ByVal dblQuantity As Double, ByVal datManufacturingDateTime As Date, ByVal strOperatorId As String, ByVal datRequestDateTime As Date, ByVal iTimeout As Integer, ByVal fBufferOnSystemException As Boolean) As String
            Dim results() As Object = Me.Invoke("PostRootstownProduction", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, iTimeout, fBufferOnSystemException})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginPostRootstownProduction(ByVal strClientName As String, ByVal strPlantId As String, ByVal strMaterialNumber As String, ByVal strProductVersion As String, ByVal dblQuantity As Double, ByVal datManufacturingDateTime As Date, ByVal strOperatorId As String, ByVal datRequestDateTime As Date, ByVal iTimeout As Integer, ByVal fBufferOnSystemException As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PostRootstownProduction", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, iTimeout, fBufferOnSystemException}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPostRootstownProduction(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostRootstownProductionAsync(ByVal strClientName As String, ByVal strPlantId As String, ByVal strMaterialNumber As String, ByVal strProductVersion As String, ByVal dblQuantity As Double, ByVal datManufacturingDateTime As Date, ByVal strOperatorId As String, ByVal datRequestDateTime As Date, ByVal iTimeout As Integer, ByVal fBufferOnSystemException As Boolean)
            Me.PostRootstownProductionAsync(strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, iTimeout, fBufferOnSystemException, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostRootstownProductionAsync(ByVal strClientName As String, ByVal strPlantId As String, ByVal strMaterialNumber As String, ByVal strProductVersion As String, ByVal dblQuantity As Double, ByVal datManufacturingDateTime As Date, ByVal strOperatorId As String, ByVal datRequestDateTime As Date, ByVal iTimeout As Integer, ByVal fBufferOnSystemException As Boolean, ByVal userState As Object)
            If (Me.PostRootstownProductionOperationCompleted Is Nothing) Then
                Me.PostRootstownProductionOperationCompleted = AddressOf Me.OnPostRootstownProductionOperationCompleted
            End If
            Me.InvokeAsync("PostRootstownProduction", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, iTimeout, fBufferOnSystemException}, Me.PostRootstownProductionOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostRootstownProductionOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostRootstownProductionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostRootstownProductionCompleted(Me, New PostRootstownProductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostScrap", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostScrap(ByVal strClientName As String, ByVal strPlantId As String, ByVal strMaterialNumber As String, ByVal strProductVersion As String, ByVal dblQuantity As Double, ByVal datManufacturingDateTime As Date, ByVal strOperatorId As String, ByVal datRequestDateTime As Date, ByVal iTimeout As Integer, ByVal fBufferOnSystemException As Boolean) As String
            Dim results() As Object = Me.Invoke("PostScrap", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, iTimeout, fBufferOnSystemException})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginPostScrap(ByVal strClientName As String, ByVal strPlantId As String, ByVal strMaterialNumber As String, ByVal strProductVersion As String, ByVal dblQuantity As Double, ByVal datManufacturingDateTime As Date, ByVal strOperatorId As String, ByVal datRequestDateTime As Date, ByVal iTimeout As Integer, ByVal fBufferOnSystemException As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PostScrap", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, iTimeout, fBufferOnSystemException}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPostScrap(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostScrapAsync(ByVal strClientName As String, ByVal strPlantId As String, ByVal strMaterialNumber As String, ByVal strProductVersion As String, ByVal dblQuantity As Double, ByVal datManufacturingDateTime As Date, ByVal strOperatorId As String, ByVal datRequestDateTime As Date, ByVal iTimeout As Integer, ByVal fBufferOnSystemException As Boolean)
            Me.PostScrapAsync(strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, iTimeout, fBufferOnSystemException, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostScrapAsync(ByVal strClientName As String, ByVal strPlantId As String, ByVal strMaterialNumber As String, ByVal strProductVersion As String, ByVal dblQuantity As Double, ByVal datManufacturingDateTime As Date, ByVal strOperatorId As String, ByVal datRequestDateTime As Date, ByVal iTimeout As Integer, ByVal fBufferOnSystemException As Boolean, ByVal userState As Object)
            If (Me.PostScrapOperationCompleted Is Nothing) Then
                Me.PostScrapOperationCompleted = AddressOf Me.OnPostScrapOperationCompleted
            End If
            Me.InvokeAsync("PostScrap", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, iTimeout, fBufferOnSystemException}, Me.PostScrapOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostScrapOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostScrapCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostScrapCompleted(Me, New PostScrapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostVirtualReceipt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostVirtualReceipt( _
                    ByVal strClientName As String,  _
                    ByVal strPlantId As String,  _
                    ByVal strMaterialNumber As String,  _
                    ByVal strProductVersion As String,  _
                    ByVal dblQuantity As Double,  _
                    ByVal datManufacturingDateTime As Date,  _
                    ByVal strOperatorId As String,  _
                    ByVal datRequestDateTime As Date,  _
                    ByVal strSerialNumber As String,  _
                    ByVal strStorageLocation As String,  _
                    ByVal strShipToNumber As String,  _
                    ByVal strContainerNumber As String,  _
                    ByVal strLotNumber As String,  _
                    ByVal strDestinationLocation As String,  _
                    ByVal strCustomerName As String,  _
                    ByVal strCustomerPlant As String,  _
                    ByVal strAddressStreet As String,  _
                    ByVal strAddressCity As String,  _
                    ByVal strAddressState As String,  _
                    ByVal strAddressPostalCode As String,  _
                    ByVal strAddressCountry As String,  _
                    ByVal strCustomerPartNumber As String,  _
                    ByVal strPartDescription As String,  _
                    ByVal dblGrossweight As Double,  _
                    ByVal strEngineeringChange As String,  _
                    ByVal strContactPerson As String,  _
                    ByVal strOptionalText1 As String,  _
                    ByVal strOptionalText2 As String,  _
                    ByVal strOptionalText3 As String,  _
                    ByVal strOptionalText4 As String,  _
                    ByVal strOptionalText5 As String,  _
                    ByVal strDestination As String,  _
                    ByVal strDunnscode As String,  _
                    ByVal strLabelFile As String,  _
                    ByVal iCopies As Integer,  _
                    ByVal strLabelType As String,  _
                    ByVal iNumberOfBoxes As Integer,  _
                    ByVal strCountryOfOrigin As String,  _
                    ByVal iTimeout As Integer,  _
                    ByVal fBufferOnSystemException As Boolean) As String
            Dim results() As Object = Me.Invoke("PostVirtualReceipt", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, strSerialNumber, strStorageLocation, strShipToNumber, strContainerNumber, strLotNumber, strDestinationLocation, strCustomerName, strCustomerPlant, strAddressStreet, strAddressCity, strAddressState, strAddressPostalCode, strAddressCountry, strCustomerPartNumber, strPartDescription, dblGrossweight, strEngineeringChange, strContactPerson, strOptionalText1, strOptionalText2, strOptionalText3, strOptionalText4, strOptionalText5, strDestination, strDunnscode, strLabelFile, iCopies, strLabelType, iNumberOfBoxes, strCountryOfOrigin, iTimeout, fBufferOnSystemException})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginPostVirtualReceipt( _
                    ByVal strClientName As String,  _
                    ByVal strPlantId As String,  _
                    ByVal strMaterialNumber As String,  _
                    ByVal strProductVersion As String,  _
                    ByVal dblQuantity As Double,  _
                    ByVal datManufacturingDateTime As Date,  _
                    ByVal strOperatorId As String,  _
                    ByVal datRequestDateTime As Date,  _
                    ByVal strSerialNumber As String,  _
                    ByVal strStorageLocation As String,  _
                    ByVal strShipToNumber As String,  _
                    ByVal strContainerNumber As String,  _
                    ByVal strLotNumber As String,  _
                    ByVal strDestinationLocation As String,  _
                    ByVal strCustomerName As String,  _
                    ByVal strCustomerPlant As String,  _
                    ByVal strAddressStreet As String,  _
                    ByVal strAddressCity As String,  _
                    ByVal strAddressState As String,  _
                    ByVal strAddressPostalCode As String,  _
                    ByVal strAddressCountry As String,  _
                    ByVal strCustomerPartNumber As String,  _
                    ByVal strPartDescription As String,  _
                    ByVal dblGrossweight As Double,  _
                    ByVal strEngineeringChange As String,  _
                    ByVal strContactPerson As String,  _
                    ByVal strOptionalText1 As String,  _
                    ByVal strOptionalText2 As String,  _
                    ByVal strOptionalText3 As String,  _
                    ByVal strOptionalText4 As String,  _
                    ByVal strOptionalText5 As String,  _
                    ByVal strDestination As String,  _
                    ByVal strDunnscode As String,  _
                    ByVal strLabelFile As String,  _
                    ByVal iCopies As Integer,  _
                    ByVal strLabelType As String,  _
                    ByVal iNumberOfBoxes As Integer,  _
                    ByVal strCountryOfOrigin As String,  _
                    ByVal iTimeout As Integer,  _
                    ByVal fBufferOnSystemException As Boolean,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PostVirtualReceipt", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, strSerialNumber, strStorageLocation, strShipToNumber, strContainerNumber, strLotNumber, strDestinationLocation, strCustomerName, strCustomerPlant, strAddressStreet, strAddressCity, strAddressState, strAddressPostalCode, strAddressCountry, strCustomerPartNumber, strPartDescription, dblGrossweight, strEngineeringChange, strContactPerson, strOptionalText1, strOptionalText2, strOptionalText3, strOptionalText4, strOptionalText5, strDestination, strDunnscode, strLabelFile, iCopies, strLabelType, iNumberOfBoxes, strCountryOfOrigin, iTimeout, fBufferOnSystemException}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPostVirtualReceipt(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostVirtualReceiptAsync( _
                    ByVal strClientName As String,  _
                    ByVal strPlantId As String,  _
                    ByVal strMaterialNumber As String,  _
                    ByVal strProductVersion As String,  _
                    ByVal dblQuantity As Double,  _
                    ByVal datManufacturingDateTime As Date,  _
                    ByVal strOperatorId As String,  _
                    ByVal datRequestDateTime As Date,  _
                    ByVal strSerialNumber As String,  _
                    ByVal strStorageLocation As String,  _
                    ByVal strShipToNumber As String,  _
                    ByVal strContainerNumber As String,  _
                    ByVal strLotNumber As String,  _
                    ByVal strDestinationLocation As String,  _
                    ByVal strCustomerName As String,  _
                    ByVal strCustomerPlant As String,  _
                    ByVal strAddressStreet As String,  _
                    ByVal strAddressCity As String,  _
                    ByVal strAddressState As String,  _
                    ByVal strAddressPostalCode As String,  _
                    ByVal strAddressCountry As String,  _
                    ByVal strCustomerPartNumber As String,  _
                    ByVal strPartDescription As String,  _
                    ByVal dblGrossweight As Double,  _
                    ByVal strEngineeringChange As String,  _
                    ByVal strContactPerson As String,  _
                    ByVal strOptionalText1 As String,  _
                    ByVal strOptionalText2 As String,  _
                    ByVal strOptionalText3 As String,  _
                    ByVal strOptionalText4 As String,  _
                    ByVal strOptionalText5 As String,  _
                    ByVal strDestination As String,  _
                    ByVal strDunnscode As String,  _
                    ByVal strLabelFile As String,  _
                    ByVal iCopies As Integer,  _
                    ByVal strLabelType As String,  _
                    ByVal iNumberOfBoxes As Integer,  _
                    ByVal strCountryOfOrigin As String,  _
                    ByVal iTimeout As Integer,  _
                    ByVal fBufferOnSystemException As Boolean)
            Me.PostVirtualReceiptAsync(strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, strSerialNumber, strStorageLocation, strShipToNumber, strContainerNumber, strLotNumber, strDestinationLocation, strCustomerName, strCustomerPlant, strAddressStreet, strAddressCity, strAddressState, strAddressPostalCode, strAddressCountry, strCustomerPartNumber, strPartDescription, dblGrossweight, strEngineeringChange, strContactPerson, strOptionalText1, strOptionalText2, strOptionalText3, strOptionalText4, strOptionalText5, strDestination, strDunnscode, strLabelFile, iCopies, strLabelType, iNumberOfBoxes, strCountryOfOrigin, iTimeout, fBufferOnSystemException, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostVirtualReceiptAsync( _
                    ByVal strClientName As String,  _
                    ByVal strPlantId As String,  _
                    ByVal strMaterialNumber As String,  _
                    ByVal strProductVersion As String,  _
                    ByVal dblQuantity As Double,  _
                    ByVal datManufacturingDateTime As Date,  _
                    ByVal strOperatorId As String,  _
                    ByVal datRequestDateTime As Date,  _
                    ByVal strSerialNumber As String,  _
                    ByVal strStorageLocation As String,  _
                    ByVal strShipToNumber As String,  _
                    ByVal strContainerNumber As String,  _
                    ByVal strLotNumber As String,  _
                    ByVal strDestinationLocation As String,  _
                    ByVal strCustomerName As String,  _
                    ByVal strCustomerPlant As String,  _
                    ByVal strAddressStreet As String,  _
                    ByVal strAddressCity As String,  _
                    ByVal strAddressState As String,  _
                    ByVal strAddressPostalCode As String,  _
                    ByVal strAddressCountry As String,  _
                    ByVal strCustomerPartNumber As String,  _
                    ByVal strPartDescription As String,  _
                    ByVal dblGrossweight As Double,  _
                    ByVal strEngineeringChange As String,  _
                    ByVal strContactPerson As String,  _
                    ByVal strOptionalText1 As String,  _
                    ByVal strOptionalText2 As String,  _
                    ByVal strOptionalText3 As String,  _
                    ByVal strOptionalText4 As String,  _
                    ByVal strOptionalText5 As String,  _
                    ByVal strDestination As String,  _
                    ByVal strDunnscode As String,  _
                    ByVal strLabelFile As String,  _
                    ByVal iCopies As Integer,  _
                    ByVal strLabelType As String,  _
                    ByVal iNumberOfBoxes As Integer,  _
                    ByVal strCountryOfOrigin As String,  _
                    ByVal iTimeout As Integer,  _
                    ByVal fBufferOnSystemException As Boolean,  _
                    ByVal userState As Object)
            If (Me.PostVirtualReceiptOperationCompleted Is Nothing) Then
                Me.PostVirtualReceiptOperationCompleted = AddressOf Me.OnPostVirtualReceiptOperationCompleted
            End If
            Me.InvokeAsync("PostVirtualReceipt", New Object() {strClientName, strPlantId, strMaterialNumber, strProductVersion, dblQuantity, datManufacturingDateTime, strOperatorId, datRequestDateTime, strSerialNumber, strStorageLocation, strShipToNumber, strContainerNumber, strLotNumber, strDestinationLocation, strCustomerName, strCustomerPlant, strAddressStreet, strAddressCity, strAddressState, strAddressPostalCode, strAddressCountry, strCustomerPartNumber, strPartDescription, dblGrossweight, strEngineeringChange, strContactPerson, strOptionalText1, strOptionalText2, strOptionalText3, strOptionalText4, strOptionalText5, strDestination, strDunnscode, strLabelFile, iCopies, strLabelType, iNumberOfBoxes, strCountryOfOrigin, iTimeout, fBufferOnSystemException}, Me.PostVirtualReceiptOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostVirtualReceiptOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostVirtualReceiptCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostVirtualReceiptCompleted(Me, New PostVirtualReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RepostByKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepostByKey(ByVal strKey As String, ByVal iTimeOut As Integer, ByVal fBufferOnSystemException As Boolean) As String
            Dim results() As Object = Me.Invoke("RepostByKey", New Object() {strKey, iTimeOut, fBufferOnSystemException})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginRepostByKey(ByVal strKey As String, ByVal iTimeOut As Integer, ByVal fBufferOnSystemException As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepostByKey", New Object() {strKey, iTimeOut, fBufferOnSystemException}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepostByKey(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepostByKeyAsync(ByVal strKey As String, ByVal iTimeOut As Integer, ByVal fBufferOnSystemException As Boolean)
            Me.RepostByKeyAsync(strKey, iTimeOut, fBufferOnSystemException, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepostByKeyAsync(ByVal strKey As String, ByVal iTimeOut As Integer, ByVal fBufferOnSystemException As Boolean, ByVal userState As Object)
            If (Me.RepostByKeyOperationCompleted Is Nothing) Then
                Me.RepostByKeyOperationCompleted = AddressOf Me.OnRepostByKeyOperationCompleted
            End If
            Me.InvokeAsync("RepostByKey", New Object() {strKey, iTimeOut, fBufferOnSystemException}, Me.RepostByKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepostByKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepostByKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepostByKeyCompleted(Me, New RepostByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectByKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SelectByKey(ByVal strKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SelectByKey", New Object() {strKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSelectByKey(ByVal strKey As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SelectByKey", New Object() {strKey}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSelectByKey(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SelectByKeyAsync(ByVal strKey As String)
            Me.SelectByKeyAsync(strKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SelectByKeyAsync(ByVal strKey As String, ByVal userState As Object)
            If (Me.SelectByKeyOperationCompleted Is Nothing) Then
                Me.SelectByKeyOperationCompleted = AddressOf Me.OnSelectByKeyOperationCompleted
            End If
            Me.InvokeAsync("SelectByKey", New Object() {strKey}, Me.SelectByKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnSelectByKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.SelectByKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SelectByKeyCompleted(Me, New SelectByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectByClient", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SelectByClient(ByVal strClient As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SelectByClient", New Object() {strClient})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSelectByClient(ByVal strClient As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SelectByClient", New Object() {strClient}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSelectByClient(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SelectByClientAsync(ByVal strClient As String)
            Me.SelectByClientAsync(strClient, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SelectByClientAsync(ByVal strClient As String, ByVal userState As Object)
            If (Me.SelectByClientOperationCompleted Is Nothing) Then
                Me.SelectByClientOperationCompleted = AddressOf Me.OnSelectByClientOperationCompleted
            End If
            Me.InvokeAsync("SelectByClient", New Object() {strClient}, Me.SelectByClientOperationCompleted, userState)
        End Sub
        
        Private Sub OnSelectByClientOperationCompleted(ByVal arg As Object)
            If (Not (Me.SelectByClientCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SelectByClientCompleted(Me, New SelectByClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub PostSerializedProductionCompletedEventHandler(ByVal sender As Object, ByVal e As PostSerializedProductionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostSerializedProductionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub PostRootstownProductionCompletedEventHandler(ByVal sender As Object, ByVal e As PostRootstownProductionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostRootstownProductionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub PostScrapCompletedEventHandler(ByVal sender As Object, ByVal e As PostScrapCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostScrapCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub PostVirtualReceiptCompletedEventHandler(ByVal sender As Object, ByVal e As PostVirtualReceiptCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostVirtualReceiptCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RepostByKeyCompletedEventHandler(ByVal sender As Object, ByVal e As RepostByKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepostByKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SelectByKeyCompletedEventHandler(ByVal sender As Object, ByVal e As SelectByKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SelectByKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SelectByClientCompletedEventHandler(ByVal sender As Object, ByVal e As SelectByClientCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SelectByClientCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
