'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace dorme1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BECDATALOOKUPSoap", [Namespace]:="http://tempuri.org/BecWebService/BecWebService")>  _
    Partial Public Class BECDATALOOKUP
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveReleaseInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCurrentLotNbrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMTMSLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStandardPackDetailsSatOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStandardPackDetailsMoldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindBroadcastCodeInCntrsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessBroadcastCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FlagAllBECsInCntrOK2RelabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FlagBECOK2RelabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://usmsbrk-ap17.northamerica.delphiauto.net/BECDataLookup_RFC100-03-124001_Te"& _ 
                "st/BECDATALOOKUP.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetDateCompleted As GetDateCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveReleaseInformationCompleted As RetrieveReleaseInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCurrentLotNbrCompleted As GetCurrentLotNbrCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMTMSLocationCompleted As GetMTMSLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStandardPackDetailsSatCompleted As GetStandardPackDetailsSatCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStandardPackDetailsMoldCompleted As GetStandardPackDetailsMoldCompletedEventHandler
        
        '''<remarks/>
        Public Event FindBroadcastCodeInCntrsCompleted As FindBroadcastCodeInCntrsCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessBroadcastCodeCompleted As ProcessBroadcastCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event FlagAllBECsInCntrOK2RelabelCompleted As FlagAllBECsInCntrOK2RelabelCompletedEventHandler
        
        '''<remarks/>
        Public Event FlagBECOK2RelabelCompleted As FlagBECOK2RelabelCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/GetDate", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDate() As Date
            Dim results() As Object = Me.Invoke("GetDate", New Object(-1) {})
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDate(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDate", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDate(ByVal asyncResult As System.IAsyncResult) As Date
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDateAsync()
            Me.GetDateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDateAsync(ByVal userState As Object)
            If (Me.GetDateOperationCompleted Is Nothing) Then
                Me.GetDateOperationCompleted = AddressOf Me.OnGetDateOperationCompleted
            End If
            Me.InvokeAsync("GetDate", New Object(-1) {}, Me.GetDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDateCompleted(Me, New GetDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/RetrieveReleaseInformation", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveReleaseInformation(ByVal machineName As String, ByVal mesPartID As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveReleaseInformation", New Object() {machineName, mesPartID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveReleaseInformation(ByVal machineName As String, ByVal mesPartID As Long, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveReleaseInformation", New Object() {machineName, mesPartID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveReleaseInformation(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveReleaseInformationAsync(ByVal machineName As String, ByVal mesPartID As Long)
            Me.RetrieveReleaseInformationAsync(machineName, mesPartID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveReleaseInformationAsync(ByVal machineName As String, ByVal mesPartID As Long, ByVal userState As Object)
            If (Me.RetrieveReleaseInformationOperationCompleted Is Nothing) Then
                Me.RetrieveReleaseInformationOperationCompleted = AddressOf Me.OnRetrieveReleaseInformationOperationCompleted
            End If
            Me.InvokeAsync("RetrieveReleaseInformation", New Object() {machineName, mesPartID}, Me.RetrieveReleaseInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveReleaseInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveReleaseInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveReleaseInformationCompleted(Me, New RetrieveReleaseInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/GetCurrentLotNbr", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCurrentLotNbr(ByVal psMachineName As String) As String
            Dim results() As Object = Me.Invoke("GetCurrentLotNbr", New Object() {psMachineName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetCurrentLotNbr(ByVal psMachineName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCurrentLotNbr", New Object() {psMachineName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetCurrentLotNbr(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCurrentLotNbrAsync(ByVal psMachineName As String)
            Me.GetCurrentLotNbrAsync(psMachineName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCurrentLotNbrAsync(ByVal psMachineName As String, ByVal userState As Object)
            If (Me.GetCurrentLotNbrOperationCompleted Is Nothing) Then
                Me.GetCurrentLotNbrOperationCompleted = AddressOf Me.OnGetCurrentLotNbrOperationCompleted
            End If
            Me.InvokeAsync("GetCurrentLotNbr", New Object() {psMachineName}, Me.GetCurrentLotNbrOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCurrentLotNbrOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCurrentLotNbrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCurrentLotNbrCompleted(Me, New GetCurrentLotNbrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/GetMTMSLocation", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMTMSLocation(ByVal psPartNbr As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMTMSLocation", New Object() {psPartNbr})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMTMSLocation(ByVal psPartNbr As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMTMSLocation", New Object() {psPartNbr}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMTMSLocation(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMTMSLocationAsync(ByVal psPartNbr As String)
            Me.GetMTMSLocationAsync(psPartNbr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMTMSLocationAsync(ByVal psPartNbr As String, ByVal userState As Object)
            If (Me.GetMTMSLocationOperationCompleted Is Nothing) Then
                Me.GetMTMSLocationOperationCompleted = AddressOf Me.OnGetMTMSLocationOperationCompleted
            End If
            Me.InvokeAsync("GetMTMSLocation", New Object() {psPartNbr}, Me.GetMTMSLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMTMSLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMTMSLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMTMSLocationCompleted(Me, New GetMTMSLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/GetStandardPackDetailsSat", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStandardPackDetailsSat(ByVal broadCastCode As String, ByVal ECL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStandardPackDetailsSat", New Object() {broadCastCode, ECL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStandardPackDetailsSat(ByVal broadCastCode As String, ByVal ECL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStandardPackDetailsSat", New Object() {broadCastCode, ECL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStandardPackDetailsSat(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStandardPackDetailsSatAsync(ByVal broadCastCode As String, ByVal ECL As String)
            Me.GetStandardPackDetailsSatAsync(broadCastCode, ECL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStandardPackDetailsSatAsync(ByVal broadCastCode As String, ByVal ECL As String, ByVal userState As Object)
            If (Me.GetStandardPackDetailsSatOperationCompleted Is Nothing) Then
                Me.GetStandardPackDetailsSatOperationCompleted = AddressOf Me.OnGetStandardPackDetailsSatOperationCompleted
            End If
            Me.InvokeAsync("GetStandardPackDetailsSat", New Object() {broadCastCode, ECL}, Me.GetStandardPackDetailsSatOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStandardPackDetailsSatOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStandardPackDetailsSatCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStandardPackDetailsSatCompleted(Me, New GetStandardPackDetailsSatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/GetStandardPackDetailsMold", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStandardPackDetailsMold(ByVal broadCastCode As String, ByVal ECL As String, ByVal systemFlag As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStandardPackDetailsMold", New Object() {broadCastCode, ECL, systemFlag})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStandardPackDetailsMold(ByVal broadCastCode As String, ByVal ECL As String, ByVal systemFlag As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStandardPackDetailsMold", New Object() {broadCastCode, ECL, systemFlag}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStandardPackDetailsMold(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStandardPackDetailsMoldAsync(ByVal broadCastCode As String, ByVal ECL As String, ByVal systemFlag As String)
            Me.GetStandardPackDetailsMoldAsync(broadCastCode, ECL, systemFlag, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStandardPackDetailsMoldAsync(ByVal broadCastCode As String, ByVal ECL As String, ByVal systemFlag As String, ByVal userState As Object)
            If (Me.GetStandardPackDetailsMoldOperationCompleted Is Nothing) Then
                Me.GetStandardPackDetailsMoldOperationCompleted = AddressOf Me.OnGetStandardPackDetailsMoldOperationCompleted
            End If
            Me.InvokeAsync("GetStandardPackDetailsMold", New Object() {broadCastCode, ECL, systemFlag}, Me.GetStandardPackDetailsMoldOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStandardPackDetailsMoldOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStandardPackDetailsMoldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStandardPackDetailsMoldCompleted(Me, New GetStandardPackDetailsMoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/FindBroadcastCodeInCntrs", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindBroadcastCodeInCntrs(ByVal broadCastCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FindBroadcastCodeInCntrs", New Object() {broadCastCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginFindBroadcastCodeInCntrs(ByVal broadCastCode As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FindBroadcastCodeInCntrs", New Object() {broadCastCode}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndFindBroadcastCodeInCntrs(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindBroadcastCodeInCntrsAsync(ByVal broadCastCode As String)
            Me.FindBroadcastCodeInCntrsAsync(broadCastCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindBroadcastCodeInCntrsAsync(ByVal broadCastCode As String, ByVal userState As Object)
            If (Me.FindBroadcastCodeInCntrsOperationCompleted Is Nothing) Then
                Me.FindBroadcastCodeInCntrsOperationCompleted = AddressOf Me.OnFindBroadcastCodeInCntrsOperationCompleted
            End If
            Me.InvokeAsync("FindBroadcastCodeInCntrs", New Object() {broadCastCode}, Me.FindBroadcastCodeInCntrsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindBroadcastCodeInCntrsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindBroadcastCodeInCntrsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindBroadcastCodeInCntrsCompleted(Me, New FindBroadcastCodeInCntrsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/ProcessBroadcastCode", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessBroadcastCode(ByVal broadCastCode As String, ByVal Dept As String, ByRef Result As String, ByVal ContainerType As String, ByVal LabelType As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ProcessBroadcastCode", New Object() {broadCastCode, Dept, Result, ContainerType, LabelType})
            Result = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginProcessBroadcastCode(ByVal broadCastCode As String, ByVal Dept As String, ByVal Result As String, ByVal ContainerType As String, ByVal LabelType As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcessBroadcastCode", New Object() {broadCastCode, Dept, Result, ContainerType, LabelType}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcessBroadcastCode(ByVal asyncResult As System.IAsyncResult, ByRef Result As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Result = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessBroadcastCodeAsync(ByVal broadCastCode As String, ByVal Dept As String, ByVal Result As String, ByVal ContainerType As String, ByVal LabelType As String)
            Me.ProcessBroadcastCodeAsync(broadCastCode, Dept, Result, ContainerType, LabelType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessBroadcastCodeAsync(ByVal broadCastCode As String, ByVal Dept As String, ByVal Result As String, ByVal ContainerType As String, ByVal LabelType As String, ByVal userState As Object)
            If (Me.ProcessBroadcastCodeOperationCompleted Is Nothing) Then
                Me.ProcessBroadcastCodeOperationCompleted = AddressOf Me.OnProcessBroadcastCodeOperationCompleted
            End If
            Me.InvokeAsync("ProcessBroadcastCode", New Object() {broadCastCode, Dept, Result, ContainerType, LabelType}, Me.ProcessBroadcastCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessBroadcastCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessBroadcastCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessBroadcastCodeCompleted(Me, New ProcessBroadcastCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/FlagAllBECsInCntrOK2Relabel", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FlagAllBECsInCntrOK2Relabel(ByVal StdPackID As String) As Boolean
            Dim results() As Object = Me.Invoke("FlagAllBECsInCntrOK2Relabel", New Object() {StdPackID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginFlagAllBECsInCntrOK2Relabel(ByVal StdPackID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FlagAllBECsInCntrOK2Relabel", New Object() {StdPackID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndFlagAllBECsInCntrOK2Relabel(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FlagAllBECsInCntrOK2RelabelAsync(ByVal StdPackID As String)
            Me.FlagAllBECsInCntrOK2RelabelAsync(StdPackID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FlagAllBECsInCntrOK2RelabelAsync(ByVal StdPackID As String, ByVal userState As Object)
            If (Me.FlagAllBECsInCntrOK2RelabelOperationCompleted Is Nothing) Then
                Me.FlagAllBECsInCntrOK2RelabelOperationCompleted = AddressOf Me.OnFlagAllBECsInCntrOK2RelabelOperationCompleted
            End If
            Me.InvokeAsync("FlagAllBECsInCntrOK2Relabel", New Object() {StdPackID}, Me.FlagAllBECsInCntrOK2RelabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnFlagAllBECsInCntrOK2RelabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.FlagAllBECsInCntrOK2RelabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FlagAllBECsInCntrOK2RelabelCompleted(Me, New FlagAllBECsInCntrOK2RelabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BecWebService/BecWebService/FlagBECOK2Relabel", RequestNamespace:="http://tempuri.org/BecWebService/BecWebService", ResponseNamespace:="http://tempuri.org/BecWebService/BecWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FlagBECOK2Relabel(ByVal broadCastCode As String) As Boolean
            Dim results() As Object = Me.Invoke("FlagBECOK2Relabel", New Object() {broadCastCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginFlagBECOK2Relabel(ByVal broadCastCode As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FlagBECOK2Relabel", New Object() {broadCastCode}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndFlagBECOK2Relabel(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FlagBECOK2RelabelAsync(ByVal broadCastCode As String)
            Me.FlagBECOK2RelabelAsync(broadCastCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FlagBECOK2RelabelAsync(ByVal broadCastCode As String, ByVal userState As Object)
            If (Me.FlagBECOK2RelabelOperationCompleted Is Nothing) Then
                Me.FlagBECOK2RelabelOperationCompleted = AddressOf Me.OnFlagBECOK2RelabelOperationCompleted
            End If
            Me.InvokeAsync("FlagBECOK2Relabel", New Object() {broadCastCode}, Me.FlagBECOK2RelabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnFlagBECOK2RelabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.FlagBECOK2RelabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FlagBECOK2RelabelCompleted(Me, New FlagBECOK2RelabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub RetrieveReleaseInformationCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveReleaseInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveReleaseInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetCurrentLotNbrCompletedEventHandler(ByVal sender As Object, ByVal e As GetCurrentLotNbrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCurrentLotNbrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetMTMSLocationCompletedEventHandler(ByVal sender As Object, ByVal e As GetMTMSLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMTMSLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetStandardPackDetailsSatCompletedEventHandler(ByVal sender As Object, ByVal e As GetStandardPackDetailsSatCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStandardPackDetailsSatCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub GetStandardPackDetailsMoldCompletedEventHandler(ByVal sender As Object, ByVal e As GetStandardPackDetailsMoldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStandardPackDetailsMoldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub FindBroadcastCodeInCntrsCompletedEventHandler(ByVal sender As Object, ByVal e As FindBroadcastCodeInCntrsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindBroadcastCodeInCntrsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub ProcessBroadcastCodeCompletedEventHandler(ByVal sender As Object, ByVal e As ProcessBroadcastCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcessBroadcastCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public Overloads ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        ' '''<remarks/>
        'Public Overloads ReadOnly Property Result() As String
        '    Get
        '        Me.RaiseExceptionIfNecessary
        '        Return CType(Me.results(1),String)
        '    End Get
        'End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub FlagAllBECsInCntrOK2RelabelCompletedEventHandler(ByVal sender As Object, ByVal e As FlagAllBECsInCntrOK2RelabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FlagAllBECsInCntrOK2RelabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")>  _
    Public Delegate Sub FlagBECOK2RelabelCompletedEventHandler(ByVal sender As Object, ByVal e As FlagBECOK2RelabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FlagBECOK2RelabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
